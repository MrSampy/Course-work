
@{
    Layout = "_Layout2";
    ViewData["Title"] = "Height Map";
    ViewBag.Num = 0;
}

@{
    int newWidth = ViewBag.Map.Width*ViewBag.Map.LenOfPixel+10*ViewBag.Map.LenOfPixel;
    int newHeight = ViewBag.Map.Height*ViewBag.Map.LenOfPixel+10*ViewBag.Map.LenOfPixel;
}

<script>
    window.onload = () => {
        const canvasId = ["canvas1","canvas2","canvas3"].map((id) => {
            const element = document.getElementById(id);
            if (element) {
                return element.getContext('2d');
            }
        });
        let startX = 10;
        let startY = 10;
        @for (int x = 0; x < ViewBag.Map.Width; x++)
        {
            @for (int y = 0; y < ViewBag.Map.Height; y++)
            {
                <text>
                    drawRect(canvasId, startX,startY,@ViewBag.Map.Tiles[x, y].Height.Color.Red,
                                                                    @ViewBag.Map.Tiles[x, y].Height.Color.Green,
                                                                    @ViewBag.Map.Tiles[x, y].Height.Color.Blue,
                                                                    @ViewBag.Map.LenOfPixel,0);
                    startX += @ViewBag.Map.LenOfPixel;
                </text>
            }
            <text>
                startX = 10;
                startY += @ViewBag.Map.LenOfPixel;
            </text>
        }
    };
</script>
<body>
<canvas id="canvas1" width="@newWidth" height="@newHeight"></canvas>
    @Html.ActionLink("Prev", "Three", "Map")
    @Html.ActionLink("Restart", "Index", "Map")
    @Html.ActionLink("Next", "Two", "Map")
<button onclick="saveCanvasAsImageFile(0,`Height Map`)">
Download
</button>
</body>